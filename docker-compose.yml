version: '3.8'

services:
  mysql:
    image: mysql:8.0.36-debian
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: myapp
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - ~/docker-services/data/mysql:/var/lib/mysql
      - ./services/mysql/config:/etc/mysql/conf.d
    networks:
      - app-network

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: myapp
    ports:
      - "27017:27017"
    volumes:
      - ~/docker-services/data/mongodb:/data/db
      - ./services/mongodb/config:/etc/mongo
    networks:
      - app-network

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ~/docker-services/data/postgres:/var/lib/postgresql/data
      - ./services/postgres/config:/etc/postgresql
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ~/docker-services/data/redis:/data
      - ./services/redis/config:/usr/local/etc/redis
    command: redis-server --appendonly yes
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ~/docker-services/data/minio:/data
      - ./services/minio/config:/etc/minio
    command: server /data --console-address ":9001"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge